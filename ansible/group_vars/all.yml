# This value determines how kubernetes binaries, config files, and service
# files are loaded onto the target machines.  The following are the only
# valid options:
#
# localBuild - requires make release to have been run to build local binaries
# packageManager - will install packages from your distribution using yum/dnf/apt
source_type: localBuild

# will be used as the Internal dns domain name if DNS is enabled. Services
# will be discoverable under <service-name>.<namespace>.svc.<domainname>, e.g.
# myservice.default.svc.cluster.local
cluster_name: cluster.local

# Account name of remote user. Ansible will use this user account to ssh into
# the managed machines. The user must be able to use sudo without asking
# for password unless ansible_sudo_pass is set
ansible_ssh_user: core

# password for the ansible_ssh_user. If this is unset you will need to set up
# ssh keys so a password is not needed.
#ansible_ssh_pass: password

# If a password is needed to sudo to root that password must be set here
#ansible_sudo_pass: password

# Required for CoreOS. CoreOS does not include a Python interpreter. The
# pre-ansible role installs a python interpreter to /opt/bin/. For more
# information see https://coreos.com/blog/managing-coreos-with-ansible.html
#ansible_python_interpreter: "PATH=/opt/bin:$PATH python"
ansible_python_interpreter: "PATH=/opt/bin:$PATH python"

# A list of insecure registrys you night need to define
insecure_registrys:
  - "172.22.111.192:5000"

# If you need a proxy for the docker daemon define these here
#http_proxy: "http://proxy.example.com:3128"
#https_proxy: "http://proxy.example.com:3128"
#no_proxy: "127.0.0.1,localhost,docker-registry.somecorporation.com"
http_proxy: "http://proxy-wsa.esl.cisco.com:80"
https_proxy: "http://proxy-wsa.esl.cisco.com:80"
no_proxy: "127.0.0.1,localhost,172.22.111.248,172.22.111.192"

# The URL to download the Kubernetes binaries for CoreOS
kube_download_url: http://172.22.111.248/downloads/bins/kubernetes/v{{ kube_version }}/kubernetes.tar.gz

# Kubernetes internal network for services.
# Kubernetes services will get fake IP addresses from this range.
# This range must not conflict with anything in your infrastructure. These
# addresses do not need to be routable and must just be an unused block of space.
kube_service_addresses: 10.254.0.0/16

# Kubernetes internal network information for CoreOS.
# Internal network variables should be set in host_vars.
# Ex> ansible/host_vars/${HOST_IP_OR_DNS_NAME} in Ansible inventory
# Each file should contain the following:
# kube_internal_interface: eth1
# kube_internal_ip: 10.10.10.2
# kube_internal_cidr: /24
# Repeat the above for additional servers.
manage_internal_kube_network: true

# when manage_internal_kube_network: true
# kube_internal_routes adds internal routes for
# CoreOS deployments in the form of:
# destination_network,destination_mask,next_hop_ip
# Example:  - 192.168.0.0,/16,192.168.111.192
kube_internal_routes:
#  - 192.168.0.0,/16,192.168.111.192

# Network implementation (flannel|opencontrail)
networking: flannel

# The URL to download the Flannel binaries for CoreOS
flannel_download_url: http://172.22.111.248/downloads/bins/flannel/v{{ flannel_version }}/flannel-{{ flannel_version }}-linux-amd64.tar.gz

# External network
# opencontrail_public_subnet: 10.1.4.0/24

# Underlay network
# opencontrail_private_subnet: 192.168.1.0/24

# Data interface
# opencontrail_interface: eth1

# Flannel internal network (optional). When flannel is used, it will assign IP
# addresses from this range to individual pods.
# This network must be unused in your network infrastructure!
flannel_subnet: 2.2.0.0

# Flannel internal network total size (optional). This is the prefix of the
# entire flannel overlay network.  So the entirety of 172.16.0.0/12 must be
# unused in your environment.
flannel_prefix: 12

# Flannel internal network (optional). This is the size allocation that flannel
# will give to each node on your network.  With these defaults you should have
# room for 4096 nodes with 254 pods per node.
flannel_host_prefix: 24

# Set to false to disable logging with elasticsearch
cluster_logging: true

# Turn to false to disable cluster monitoring with heapster and influxdb
cluster_monitoring: true

# Turn to false to disable the kube-ui addon for this cluster
kube-ui: false

# Turn to false to disable the kube-dash addon for this cluster
kube-dash: false

# Turn this varable to 'false' to disable whole DNS configuration.
dns_setup: true
# How many replicas in the Replication Controller
dns_replicas: 1

# There are other variable in roles/kubernetes/defaults/main.yml but changing
# them comes with a much higher risk to your cluster. So proceed over there
# with caution.

# See kube documentation for apiserver runtime config options.  Example below enables HPA, deployments features.
# apiserver_extra_args: "--runtime-config=extensions/v1beta1/deployments=true"
apiserver_extra_args: "--service-node-port-range=9000-9999"
