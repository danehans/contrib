# This value determines how kubernetes binaries, config files, and service
# files are loaded onto the target machines.  The following are the only
# valid options:
#
# localBuild - requires make release to have been run to build local binaries
# packageManager - will install packages from your distribution using yum/dnf/apt
source_type: localBuild

# will be used as the Internal dns domain name if DNS is enabled. Services
# will be discoverable under <service-name>.<namespace>.svc.<domainname>, e.g.
# myservice.default.svc.cluster.local
cluster_name: cluster.local

# Account name of remote user. Ansible will use this user account to ssh into
# the managed machines. The user must be able to use sudo without asking
# for password unless ansible_sudo_pass is set
ansible_ssh_user: core

# password for the ansible_ssh_user. If this is unset you will need to set up
# ssh keys so a password is not needed.
#ansible_ssh_pass: password

# If a password is needed to sudo to root that password must be set here
#ansible_sudo_pass: password

# A list of insecure registrys you might need to define
insecure_registrys:
#  - "gcr.io"

# Required for CoreOS. CoreOS does not include a Python interpreter. The
# pre-ansible role installs a python interpreter to /opt/bin/. For more
# information see https://coreos.com/blog/managing-coreos-with-ansible.html
ansible_python_interpreter: "PATH=/opt/bin:$PATH python"

# If you need a proxy for the docker daemon define these here
#http_proxy: "http://proxy.example.com:3128"
#https_proxy: "http://proxy.example.com:3128"
#no_proxy: "127.0.0.1,localhost,docker-registry.somecorporation.com"

# Kubernetes internal network for services.
# Kubernetes services will get fake IP addresses from this range.
# This range must not conflict with anything in your infrastructure. These
# addresses do not need to be routable and must just be an unused block of space.
kube_service_addresses: 10.254.0.0/16

# Kubernetes internal network information for CoreOS.
# Internal network variables should be set in host_vars.
# Ex> ansible/host_vars/${HOST_IP_OR_DNS_NAME} in Ansible inventory
# Each file should contain the following:
# kube_internal_interface: eth1
# kube_internal_ip: 10.10.10.2
# kube_internal_cidr: /24
# Repeat the above for additional servers.
manage_internal_kube_network: true

# When manage_internal_kube_network: true
# kube_internal_routes adds internal routes for
# CoreOS deployments in the form of:
# destination_network,destination_mask,next_hop_ip
kube_internal_routes:
#  - 192.168.0.0,/16,192.168.10.1

# Network implementation (flannel|opencontrail)
networking: flannel

# External network
# opencontrail_public_subnet: 10.1.4.0/24

# Underlay network
# opencontrail_private_subnet: 192.168.1.0/24

# Data interface
# opencontrail_interface: eth1

# Flannel internal network (optional). When flannel is used, it will assign IP
# addresses from this range to individual pods.
# This network must be unused in your network infrastructure!
flannel_subnet: 172.16.0.0

# Flannel internal network total size (optional). This is the prefix of the
# entire flannel overlay network.  So the entirety of 172.16.0.0/12 must be
# unused in your environment.
flannel_prefix: 12

# Flannel internal network (optional). This is the size allocation that flannel
# will give to each node on your network.  With these defaults you should have
# room for 4096 nodes with 254 pods per node.
flannel_host_prefix: 24

# Set to false to disable logging with elasticsearch
cluster_logging: true

# Turn to false to disable cluster monitoring with heapster and influxdb
cluster_monitoring: true

# Turn to false to disable the kube-ui addon for this cluster
kube-ui: false

# Turn to false to disable the kube-dash addon for this cluster
kube-dash: false

# Turn this varable to 'false' to disable whole DNS configuration.
dns_setup: true
# How many replicas in the Replication Controller
dns_replicas: 1

# There are other variable in roles/kubernetes/defaults/main.yml but changing
# them comes with a much higher risk to your cluster. So proceed over there
# with caution.

# See kube documentation for apiserver runtime config options.  Example below enables HPA, deployments features.
# apiserver_extra_args: "--runtime-config=extensions/v1beta1/deployments=true"

# URL to download Kubernetes binaries tar file. Applicable for
# deployments that use kube_source_type: "github-release"
# Default: https://github.com/kubernetes/kubernetes/releases/download/v{{ kube_version }}/kubernetes.tar.gz
#kube_download_url: http://www.example.com/kubernetes.tar.gz

# URL to download Flannel binaries tar file. Applicable for
# deployments that use flannel_source_type: "github-release"
# Default:
# https://github.com/coreos/flannel/releases/download/v{{ flannel_version }}/flannel-{{ flannel_version }}-linux-amd64.tar.gz
#flannel_download_url: http://www.example.com/flannel-0.5.5-linux-amd64.tar.gz

### Gem Master Group Vars ###

# IP of gem-master used for PXE booting nodes
#dnsmasq_listen_address: '10.10.10.10'

# Don't change ATM
#dnsmasq_domain_needed: true

# Don't change ATM
#dnsmasq_expand_hosts: true

# Don't change ATM
#dnsmasq_bogus_priv: true

# DNS Domain to use for PXE nodes
#dnsmasq_domain: 'example.com'

# Address range to use for assigning to PXE-booted nodes
#dnsmasq_dhcp_ranges:
#  - start_addr: '10.30.100.10'
#    end_addr: '10.30.100.250'
#    lease_time: '8h'

# Set specific IP's for hosts within the dnsmasq_dhcp_ranges above
#dnsmasq_dhcp_hosts:
#  - name: 'master'
#    mac: 'a4:4c:11:13:44:69'
#    ip: '10.30.100.11'
# repeat for additional hosts

# IP/DNS name of host the gem-master
#dnsmasq_tftp_server: 'gem-master.example.com'

# Default PXE boot file
#dnsmasq_boot_file: 'pxelinux.0'

# Gateway IP for PXE-booted nodes
#dnsmasq_option_router: '10.30.118.65'

# Don't change ATM
#tftp_server_pxe_support: true

# IP/DNS name of the gem-master
#httpd_ServerName: gem-master.example.com

# coreos-cloudinit configuration. Don't change ATM
#cloudinit_write_files: |
#  - path: /etc/profile.d/opt-path.sh
#    owner: root
#    permissions: 0755
#    content: |
#      #! /usr/bin/bash
#      PATH=$PATH/opt/bin
#
#cloudinit_ssh_authorized_keys: >
  # ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQDycXXAIMkoVOe3bTagGczMjCu9pWu11ntF/dKLoHq3dbSKHx9iCb1uR+JdhS3QnOPhOZGnHshwytH6OF1qjlXugf5gxqvqO/JzR/PrWpsScl4o0GEdkbRD7WCmnUtdstGsl8N/L6MRbU8HCXv4THgkMA/PvvlifYTFg9u+lrwIYec0OF3CsPwouMv7Vn7jh3T4G3hBRETU7+SwzIxbhBapw+azVVv2EF9sjU6vlV3H+vSqs2hJTkD22M2GGj8tM6+kYu0Qh/LYj/QETWfGFrA2kAosLC4xsUA9kEQdJaAOkNMNZJT+aTFhYY0Dd0l7U1EOjbdqj14khJHGQn6ygCaT core@gem-master.example.com
